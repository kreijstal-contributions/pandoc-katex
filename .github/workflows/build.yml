name: build
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        platform:
          - name: linux-gnu
            os: ubuntu
            target: x86_64-unknown-linux-gnu
          - name: linux-musl
            os: ubuntu
            target: x86_64-unknown-linux-musl
          - name: macos
            os: macos
            target: x86_64-apple-darwin
    name: build [${{ matrix.platform.name }}]
    runs-on: ${{ matrix.platform.os }}-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
      - name: Set up musl-gcc
        if: matrix.platform.name == 'linux-musl'
        run: |
          sudo apt-get install musl-tools -y
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.name }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --target ${{ matrix.platform.target }} --locked --path . --root pandoc-katex
      - name: Package
        id: pkg
        run: |
          tar -C ./pandoc-katex -czf "pandoc-katex-$(git describe --tags --always)-${{ matrix.platform.target }}.tar.gz" .
          echo "::set-output name=file::$(echo pandoc-katex-*.tar.gz)"
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.platform.name }}
          path: ${{ steps.pkg.file }}

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - name: Cache cargo clippy
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-clippy-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
          name: clippy

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Login to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_TOKEN }}
      - name: Run cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish

