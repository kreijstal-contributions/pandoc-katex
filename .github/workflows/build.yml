name: build
on: [push, pull_request]
jobs:
  build:
    strategy:
      matrix:
        platform:
          - os: ubuntu
            target: x86_64-unknown-linux-gnu
          - os: ubuntu
            target: x86_64-unknown-linux-musl
          - os: macos
            target: x86_64-apple-darwin
    name: build [${{ matrix.platform.os }} ${{ matrix.platform.target }}]
    runs-on: ${{ matrix.platform.os }}-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.platform.target }}
          override: true
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --all-features

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true
      - name: Cache cargo clippy
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-clippy-target-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
          name: clippy

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v1
      - name: Set up rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Login to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_TOKEN }}
      - name: Run cargo publish
        uses: actions-rs/cargo@v1
        with:
          command: publish

